syntax = "proto3";

package buildbarn.configuration.bb_browser;

import "github.com/buildbarn/bb-storage/pkg/proto/configuration/auth/auth.proto";
import "github.com/buildbarn/bb-storage/pkg/proto/configuration/blobstore/blobstore.proto";
import "github.com/buildbarn/bb-storage/pkg/proto/configuration/global/global.proto";
import "github.com/buildbarn/bb-storage/pkg/proto/configuration/http/server/server.proto";
import "github.com/buildbarn/bb-storage/pkg/proto/configuration/jmespath/jmespath.proto";

option go_package = "github.com/buildbarn/bb-browser/pkg/proto/configuration/bb_browser";

message ApplicationConfiguration {
  // Configuration for blob storage.
  buildbarn.configuration.blobstore.BlobstoreConfiguration blobstore = 1;

  // Maximum Protobuf message size to unmarshal.
  int64 maximum_message_size_bytes = 2;

  // Was 'listen_address'. The listen address of the HTTP server can now
  // be configured through 'http_servers'.
  reserved 3;

  // Configuration for HTTP servers that expose the web UI.
  repeated buildbarn.configuration.http.server.Configuration http_servers = 10;

  // The path under which the web service needs to be exposed. When left
  // empty, the web service will be exposed at "/".
  string route_prefix = 7;

  // Common configuration options that apply to all Buildbarn binaries.
  buildbarn.configuration.global.Configuration global = 4;

  // Prefix that needs to be added to instance names that are part of
  // bb_clientd pathname strings.
  //
  // bb_browser's web interface contains buttons that can be used to
  // generate paths of objects in bb_clientd and copy them to the
  // clipboard. Because most setups of bb_clientd use
  // DemultiplexingBlobAccess, it may be necessary to add a prefix to
  // the REv2 instance name that's embedded in the pathname string.
  string bb_clientd_instance_name_prefix = 5;

  // The Initial Size Class Cache (ISCC) where execution times of
  // previous invocations of actions are stored. bb_browser is capable
  // of displaying this information on pages of actions.
  //
  // When this option is not set, no statistics will be shown.
  buildbarn.configuration.blobstore.BlobAccessConfiguration
      initial_size_class_cache = 6;

  // The File System Access Cache (FSAC) where file system access
  // profiles are stored. bb_browser is capable of displaying this
  // information as part of input directory listings, showing which
  // files are prefetched the next time the action executes.
  //
  // When this option is not set, no file system acces information will
  // be shown.
  buildbarn.configuration.blobstore.BlobAccessConfiguration
      file_system_access_cache = 9;

  // Authorization requirements applied to objects read through the
  // web service from the Content Addressable Storage (CAS),
  // Action Cache (AC) and Initial Size Class Cache (ISCC).
  buildbarn.configuration.auth.AuthorizerConfiguration authorizer = 8;

  // JMESPath expression to convert REv2 RequestMetadata to a set of
  // links of external services that provide additional context to the
  // action being built.
  //
  // The expression must yield a map of strings. Keys correspond to the
  // labels of buttons to display in the web UI, while values correspond
  // to URLs to which the buttons should link. The expression receives
  // the REv2 RequestMetadata message as its argument.
  //
  // Example expression:
  //
  // {
  //   "View build results": join('', [
  //       'https://buildeventsviewer.com/',
  //       toolInvocationId
  //   ]),
  //   "Search for target": join('', [
  //       'https://codesearch.com/?q=',
  //       targetId
  //   ])
  // }
  //
  // If no links to external services need to be provided, you may use
  // expression `{}` (including the backticks).
  buildbarn.configuration.jmespath.Expression
      request_metadata_links_jmespath_expression = 11;
}
