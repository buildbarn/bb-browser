load("@aspect_bazel_lib//lib:transitions.bzl", "platform_transition_filegroup")
load("@aspect_rules_js//js:defs.bzl", "js_run_binary")
load("@com_github_buildbarn_bb_browser_npm//:purgecss/package_json.bzl", purgecss_bin = "bin")
load("@com_github_buildbarn_bb_storage//tools:container.bzl", "container_push_official", "multiarch_go_image")
load("@rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "bb_browser_lib",
    srcs = [
        "browser_service.go",
        "main.go",
    ],
    # keep
    embedsrcs = [
        ":stylesheet",
        "favicon.png",
        "templates/error.html",
        "templates/footer.html",
        "templates/header.html",
        "templates/page_action.html",
        "templates/page_command.html",
        "templates/page_directory.html",
        "templates/page_previous_execution_stats.html",
        "templates/page_tree.html",
        "templates/page_welcome.html",
        "templates/view_action_timestamp_delta.html",
        "templates/view_arguments.html",
        "templates/view_command.html",
        "templates/view_directory.html",
        "templates/view_log.html",
        "templates/view_previous_execution_stats.html",
    ],
    importpath = "github.com/buildbarn/bb-browser/cmd/bb_browser",
    visibility = ["//visibility:private"],
    deps = [
        "//pkg/proto/configuration/bb_browser",
        "//pkg/proto/query",
        "@bazel_remote_apis//build/bazel/remote/execution/v2:remote_execution_go_proto",
        "@com_github_buildbarn_bb_remote_execution//pkg/builder",
        "@com_github_buildbarn_bb_remote_execution//pkg/filesystem/access",
        "@com_github_buildbarn_bb_remote_execution//pkg/proto/cas",
        "@com_github_buildbarn_bb_remote_execution//pkg/proto/resourceusage",
        "@com_github_buildbarn_bb_storage//pkg/auth/configuration",
        "@com_github_buildbarn_bb_storage//pkg/blobstore",
        "@com_github_buildbarn_bb_storage//pkg/blobstore/configuration",
        "@com_github_buildbarn_bb_storage//pkg/clock",
        "@com_github_buildbarn_bb_storage//pkg/digest",
        "@com_github_buildbarn_bb_storage//pkg/filesystem/path",
        "@com_github_buildbarn_bb_storage//pkg/global",
        "@com_github_buildbarn_bb_storage//pkg/http/server",
        "@com_github_buildbarn_bb_storage//pkg/jmespath",
        "@com_github_buildbarn_bb_storage//pkg/program",
        "@com_github_buildbarn_bb_storage//pkg/proto/auth",
        "@com_github_buildbarn_bb_storage//pkg/proto/fsac",
        "@com_github_buildbarn_bb_storage//pkg/proto/iscc",
        "@com_github_buildbarn_bb_storage//pkg/util",
        "@com_github_buildkite_terminal_to_html//:terminal-to-html",
        "@com_github_dustin_go_humanize//:go-humanize",
        "@com_github_gorilla_mux//:mux",
        "@com_github_kballard_go_shellquote//:go-shellquote",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//metadata",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//encoding/protojson",
        "@org_golang_google_protobuf//proto",
        "@org_golang_google_protobuf//types/known/anypb",
        "@org_golang_google_protobuf//types/known/timestamppb",
        "@org_gonum_v1_plot//:plot",
        "@org_gonum_v1_plot//plotter",
        "@org_gonum_v1_plot//vg",
        "@org_gonum_v1_plot//vg/draw",
    ],
)

templates = glob(["templates/*.html"])

filegroup(
    name = "templates",
    srcs = templates,
)

purgecss_bin.purgecss_binary(
    name = "purgecss",
    tags = ["manual"],
)

# Create a copy of Bootstrap that only contains the style attributes
# used by the HTML templates. Also include the classes needed by
# terminal-to-html.
js_run_binary(
    name = "bootstrap_stylesheet_platform",
    srcs = [
        "@com_github_twbs_bootstrap//:css/bootstrap.min.css",
    ] + templates,
    outs = ["bootstrap_stylesheet.css"],
    args = [
        # js_run_binary runs in the output dir;
        # see https://github.com/aspect-build/rules_js/blob/main/docs/migrate.md#account-for-change-to-working-directory
        "--css",
        "../../../$(location @com_github_twbs_bootstrap//:css/bootstrap.min.css)",
        "--safelist",
        "bg-secondary",
        "--output",
        "../../../$(location bootstrap_stylesheet.css)",
        "--content",
    ] + [
        "../../../$(location %s)" % f
        for f in templates
    ],
    copy_srcs_to_bin = False,
    tags = ["manual"],
    tool = ":purgecss",
)

# Work around https://github.com/aspect-build/rules_js/issues/2121 by always
# building the stylesheet for the host platform, even if we are cross
# compiling.
platform_transition_filegroup(
    name = "bootstrap_stylesheet",
    srcs = [":bootstrap_stylesheet_platform"],
    target_platform = "@platforms//host",
)

genrule(
    name = "stylesheet",
    srcs = [
        ":bootstrap_stylesheet",
        "@com_github_buildkite_terminal_to_html//assets:terminal.css",
    ],
    outs = ["stylesheet.css"],
    cmd = "cat $(SRCS) > $@",
)

go_binary(
    name = "bb_browser",
    embed = [":bb_browser_lib"],
    pure = "on",
    visibility = ["//visibility:public"],
)

multiarch_go_image(
    name = "bb_browser_container",
    binary = ":bb_browser",
)

container_push_official(
    name = "bb_browser_container_push",
    component = "bb-browser",
    image = ":bb_browser_container",
)
